{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, GET_PROFILES, GET_REPOS } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all Profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Girthub repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experiece Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete account and profile\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure? This can not be undone!')) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE,\n        payload: res.data\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/actions/profile.js"],"names":["axios","setAlert","CLEAR_PROFILE","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\nCLEAR_PROFILE,\nGET_PROFILE,\nPROFILE_ERROR,\nUPDATE_PROFILE,\nACCOUNT_DELETED,\nGET_PROFILES,\nGET_REPOS\n} from './types';\n\n//Get current users profile\n\nexport const getCurrentProfile = () => async dispatch =>{\n  try {\n      const res = await axios.get('/api/profile/me');\n      \n\n      dispatch({\n          type: GET_PROFILE,\n          payload: res.data\n      });\n  } catch (err) {\n      dispatch({\n          type: PROFILE_ERROR,\n          payload: {\n              msg: err.response.statusText, status: err.response.status\n          }\n      })\n  }\n};\n\n//Get all Profiles\n\nexport const getProfiles = () => async dispatch =>{\n    \n    dispatch({\n        type: CLEAR_PROFILE\n    });\n    \n    try {\n        const res = await axios.get('/api/profile');\n        \n  \n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        })\n    }\n  };\n\n  //Get profile by ID\n  export const getProfileById = userId => async dispatch =>{\n    \n    \n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n        \n  \n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        })\n    }\n  };\n\n  //Get Girthub repos\n  export const getGithubRepos = username => async dispatch =>{\n    \n    \n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n        \n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        })\n    }\n  };\n\n\n\n\n//Create or update profile\nexport const createProfile = (formData,history,edit = false) =>async dispatch => {\ntry {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const res = await axios.post('/api/profile',formData,config);\n\n    dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created','success'));\n\n    if (!edit) {\n        history.push('/dashboard');\n    }\n\n} catch (err) {\nconst errors = err.response.data.errors;\n\nif (errors) {\n    errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n}\n\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};\n\n//Add Experience\n\nexport const addExperience = (formData,history) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n    \n        const res = await axios.put('/api/profile/experience',formData,config);\n    \n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n    \n        dispatch(setAlert('Experience Added','success'));\n    \n        \n            history.push('/dashboard');\n        \n    \n    } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n    }\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};\n\n//Add Education\n\nexport const addEducation = (formData,history) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n    \n        const res = await axios.put('/api/profile/education',formData,config);\n    \n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n    \n        dispatch(setAlert('Education Added','success'));\n    \n        \n            history.push('/dashboard');\n        \n    \n    } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n    }\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};\n\n//Delete experience\nexport const deleteExperience = id => async dispatch =>{\n    try {\n       const res = await axios.delete(`/api/profile/experience/${id}`) ;\n\n       dispatch({\n           type: UPDATE_PROFILE,\n           payload: res.data\n       });\n\n       dispatch(setAlert('Experiece Removed','success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        });\n    }\n};\n\n//Delete education\nexport const deleteEducation = id => async dispatch =>{\n    try {\n       const res = await axios.delete(`/api/profile/education/${id}`) ;\n\n       dispatch({\n           type: UPDATE_PROFILE,\n           payload: res.data\n       });\n\n       dispatch(setAlert('Education Removed','success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        });\n    }\n};\n\n//Delete account and profile\n\nexport const deleteAccount = id => async dispatch =>{\n    if (window.confirm('Are you sure? This can not be undone!')) {\n        \n    try {\n       const res = await axios.delete(`/api/profile`) ;\n\n       dispatch({\n           type: CLEAR_PROFILE,\n           payload: res.data\n       });\n       dispatch({\n           type: ACCOUNT_DELETED\n       });\n\n       dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        });\n    }\n}\n};\n"]},"metadata":{},"sourceType":"module"}