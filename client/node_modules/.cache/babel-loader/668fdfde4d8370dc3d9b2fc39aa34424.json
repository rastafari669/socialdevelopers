{"ast":null,"code":"import { GET_POSTS, UPDATE_LIKES, POST_ERROR, DELETE_POST, ADD_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/reducers/post.js"],"names":["GET_POSTS","UPDATE_LIKES","POST_ERROR","DELETE_POST","ADD_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes"],"mappings":"AAAA,SACIA,SADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,WAJJ,EAKIC,QALJ,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AASA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA8BM,MAA9B,EAAqC;AAChD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;;AAEA,UAAOC,IAAP;AACI,SAAKZ,SAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFJ,QAAAA,KAAK,EAAEO,OAFL;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKJ,QAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAFL;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKA,SAAKL,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFL;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAOJ,SAAKN,UAAL;AACA,aAAM,EACF,GAAGQ,KADD;AAEFD,QAAAA,KAAK,EAAEI,OAFL;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKA,SAAKP,YAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAC,GAAGV,IAAJ;AAAUW,UAAAA,KAAK,EACtEL,OAAO,CAACK;AAD+C,SAA1B,GACZX,IADZ,CAFL;AAIAC,QAAAA,OAAO,EAAE;AAJT,OAAN;;AAOJ;AACA,aAAOE,KAAP;AApCR;AAuCH","sourcesContent":["import{\n    GET_POSTS,\n    UPDATE_LIKES,\n    POST_ERROR,\n    DELETE_POST,\n    ADD_POST\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}\n\n\n\nexport default function(state = initialState,action){\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts: payload,\n                loading:false\n            };\n        case ADD_POST:\n            return{\n                ...state,\n                posts: [...state.posts, payload],\n                loading: false\n            }\n            case DELETE_POST:\n                return{\n                    ...state,\n                    posts: state.posts.filter(post => post._id !== payload),\n                    loading: false\n\n                }\n\n            case POST_ERROR:\n            return{\n                ...state,\n                error: payload,\n                loading:false\n            } \n            case UPDATE_LIKES:\n                return{\n                    ...state,\n                    posts: state.posts.map(post => post._id === payload.id ? {...post, likes:\n                      payload.likes} : post  ),\n                      loading: false\n                    \n                };\n            default: \n            return state\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}