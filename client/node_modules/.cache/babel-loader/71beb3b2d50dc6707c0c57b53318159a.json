{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; //Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/actions/post.js"],"names":["axios","setAlert","ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","GET_POST"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {ADD_POST, DELETE_POST, GET_POSTS,POST_ERROR, UPDATE_LIKES} from './types';\n\n//Get posts\n\nexport const getPosts = () => async dispatch =>{\n    try {\n        const res = await axios.get('/api/posts');\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Add like\nexport const addLike = id => async dispatch =>{\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id,likes: res.data}\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Remove like\nexport const removeLike = id => async dispatch =>{\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id,likes: res.data}\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Delete post\nexport const deletePost = id => async dispatch =>{\n    try {\n        await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type: DELETE_POST,\n            payload:  id \n        });\n        dispatch(setAlert('Post Removed','success'))\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Add post\nexport const addPost = formData => async dispatch =>{\nconst config= {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}\n\n    try {\n     const res = await axios.post(`/api/posts`,formData,config);\n        dispatch({\n            type: ADD_POST,\n            payload: res.data \n        });\n        dispatch(setAlert('Post Created','success'))\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Get post\nexport const getPost = id => async dispatch =>{\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};"]},"metadata":{},"sourceType":"module"}