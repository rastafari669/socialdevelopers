{"ast":null,"code":"import axios from 'axios';\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; //Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/actions/post.js"],"names":["axios","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {DELETE_POST, GET_POSTS,POST_ERROR, UPDATE_LIKES} from './types';\n\n//Get posts\n\nexport const getPosts = () => async dispatch =>{\n    try {\n        const res = await axios.get('/api/posts');\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Add like\nexport const addLike = id => async dispatch =>{\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id,likes: res.data}\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Remove like\nexport const removeLike = id => async dispatch =>{\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { id,likes: res.data}\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};\n\n//Delete post\nexport const deletePost = id => async dispatch =>{\n    try {\n        const res = await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type: DELETE_POST,\n            payload:  id \n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText, status: err.response.status\n            }\n        }); \n    }\n};"]},"metadata":{},"sourceType":"module"}