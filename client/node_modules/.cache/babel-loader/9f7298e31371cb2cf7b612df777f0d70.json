{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n}; //Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP;AAMA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAiB;AAC/C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACpBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;AACA,CAJM,C,CAKP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,KAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA2B,MAAMN,QAAN,IAAiB;AACnE,QAAMO,MAAM,GAAE;AACVC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ;AADE,GAAd;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAwBJ,IAAxB,EAA6BF,MAA7B,CAAlB;AAEAP,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEpB,gBADD;AAELqB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACP,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAW,QAAX,CAAT,CAAhC;AACH;;AACDtB,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEnB;AADD,KAAD,CAAR;AAGH;AACD,CAzBM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = () => async dispatch =>{\nif (localStorage.token) {\n    setAuthToken(localStorage.token)\n}\n}\n//Register User\nexport const register = ({name,email,password}) => async dispatch =>{\n const config ={\n     headers:{\n         'Content-Type': 'application/json'\n     }\n }\n\n const body = JSON.stringify({name,email,password});\n\n try {\n     const res = await axios.post('/api/users',body,config);\n\n     dispatch({\n         type: REGISTER_SUCCESS,\n         payload: res.data\n     })\n } catch (err) {\n     const errors = err.response.data.errors;\n     if (errors) {\n         errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n     }\n     dispatch({\n         type: REGISTER_FAIL\n     })\n }\n}\n"]},"metadata":{},"sourceType":"module"}