{"ast":null,"code":"var _jsxFileName = \"/Users/joeykraus/Desktop/Mern/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"Test\");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAmBE,EAAAA,IAAnB;AAAwBC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT;AAAhC,CAAD,KAAwD;AAEtER,EAAAA,SAAS,CAAC,MAAM;AACbI,IAAAA,iBAAiB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBACP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAGH,CATD;;AAWAF,SAAS,CAACI,SAAV,GAAsB;AACtBL,EAAAA,iBAAiB,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADZ;AAEtBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFD;AAGtBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHJ,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAI;AACjCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADqB;AAEjCC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFkB,CAAJ,CAA7B;;AAKA,eAAeL,OAAO,CAACW,eAAD,EAAiB;AAACT,EAAAA;AAAD,CAAjB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\n\nconst Dashboard = ({getCurrentProfile,auth,profile:{profile,loading}}) => {\n\n    useEffect(() => {\n       getCurrentProfile()\n    }, []);\n\n    return loading && profile === null ? <Spinner/> : \n    <Fragment>Test</Fragment>\n    \n}\n\nDashboard.propTypes = {\ngetCurrentProfile: PropTypes.func.isRequired,\nauth: PropTypes.object.isRequired,\nprofile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\nauth: state.auth,\nprofile: state.profile\n})\n\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}