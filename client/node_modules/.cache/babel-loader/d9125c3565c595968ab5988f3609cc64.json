{"ast":null,"code":"var _jsxFileName = \"/Users/joeykraus/Desktop/Mern/client/src/components/profile/Profile.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport { Link } from 'react-router-dom';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\n\nconst Profile = ({\n  match,\n  auth,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Back to Profiles\"), auth.isAuth && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, profile.experience.map(exp => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: exp._id,\n    experience: exp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }\n  }, \"No Experience Credentials\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/components/profile/Profile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","Link","ProfileExperience","ProfileEducation","Profile","match","auth","profile","loading","params","id","isAuth","user","_id","experience","length","map","exp","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect,Fragment} from 'react'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getProfileById} from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport { Link } from 'react-router-dom';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\n\n\nconst Profile = ({match,auth,getProfileById,profile:{\n    profile,\n    loading\n}}) => {\n\nuseEffect(() => {\n getProfileById(match.params.id);   \n}, [getProfileById,match.params.id])\n\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner/> : \n            <Fragment>\n            <Link to='/profiles' className='btn btn-light'>\n            Back to Profiles\n            </Link>\n            {/* HERE WE CHECK IF THE ACTUAL USER VIEWING THE PROFILE IS THE OWNER ONLY THAN CAN EDIT PROFILE */}\n            {auth.isAuth && auth.loading === false && auth.user._id === profile.user._id &&\n            (<Link to='/edit-profile' className='btn btn-dark'>\n            Edit profile\n            </Link>\n            )}\n            <div className='profile-grid my-1'>\n                <ProfileTop profile={profile}/>\n                <ProfileAbout profile={profile}/>\n\n                <div className=\"profile-exp bg-white p-2\">\n                    <h2 className=\"text-primary\">Experience</h2>\n                    {profile.experience.length > 0 ? \n                    (\n                        <Fragment>\n                     {profile.experience.map(exp => (\n                         <ProfileExperience key={exp._id} experience={exp}/>\n                     ))}\n                        </Fragment>\n                    ) \n                        : (<h4>No Experience Credentials</h4>)}\n                </div>\n                {/* <div className=\"profile-exp bg-white p-2\">\n                    <h2 className=\"text-primary\">Education</h2>\n                    {profile.education.length > 0 ? \n                    (\n                        <Fragment>\n                     {profile.education.map(edu => (\n                         <ProfileEducation key={edu._id} experience={edu}/>\n                     ))}\n                        </Fragment>\n                    ) \n                        : (<h4>No Education Credentials</h4>)}\n                </div> */}\n            </div>\n            </Fragment> \n                }\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\ngetProfileById: PropTypes.func.isRequired,\nprofile: PropTypes.object.isRequired,\nauth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\nprofile: state.profile,\nauth: state.auth\n})\nexport default connect(mapStateToProps,{getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}