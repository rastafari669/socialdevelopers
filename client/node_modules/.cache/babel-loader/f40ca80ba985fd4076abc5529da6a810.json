{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/joeykraus/Desktop/Mern/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\nGET_PROFILE,\nPROFILE_ERROR,\nUPDATE_PROFILE\n} from './types';\n\n//Get current users profile\n\nexport const getCurrentProfile = () => async dispatch =>{\n  try {\n      const res = await axios.get('/api/profile/me');\n      \n\n      dispatch({\n          type: GET_PROFILE,\n          payload: res.data\n      });\n  } catch (err) {\n      dispatch({\n          type: PROFILE_ERROR,\n          payload: {\n              msg: err.response.statusText, status: err.response.status\n          }\n      })\n  }\n};\n\n\n//Create or update profile\nexport const createProfile = (formData,history,edit = false) =>async dispatch => {\ntry {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const res = await axios.post('/api/profile',formData,config);\n\n    dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created','success'));\n\n    if (!edit) {\n        history.push('/dashboard');\n    }\n\n} catch (err) {\nconst errors = err.response.data.errors;\n\nif (errors) {\n    errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n}\n\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};\n\n//Add Experience\n\nexport const addExperience = (formData,history) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n    \n        const res = await axios.put('/api/profile/experience',formData,config);\n    \n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n    \n        dispatch(setAlert('Experience Added','success'));\n    \n        \n            history.push('/dashboard');\n        \n    \n    } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n    }\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};\n\n//Add Education\n\nexport const addEducation = (formData,history) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n    \n        const res = await axios.put('/api/profile/education',formData,config);\n    \n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n    \n        dispatch(setAlert('Education Added','success'));\n    \n        \n            history.push('/dashboard');\n        \n    \n    } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n    }\n    dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n            msg: err.response.statusText, status: err.response.status\n        }\n    });\n}\n};"]},"metadata":{},"sourceType":"module"}